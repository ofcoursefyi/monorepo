generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Departments {
  code String @id @db.VarChar(4)
  name String

  courses Courses[]

  @@index([code])
}

model Courses {
  term   String @db.VarChar(4)
  dept   String @db.VarChar(4)
  course String @db.VarChar(9)

  prefix   String  @db.VarChar(4)
  number   String  @db.VarChar(3)
  sequence String? @db.VarChar(1)
  suffix   String? @db.VarChar(6)

  title String
  desc  String?

  units_low  Decimal? @db.Decimal(3, 1)
  units_high Decimal? @db.Decimal(3, 1)
  units_max  Decimal? @db.Decimal(3, 1)

  restr_major  String?
  restr_class  String?
  restr_school String?

  prereq String?
  coreq  String?

  depts    Departments @relation(fields: [dept], references: [code])
  sections Sections[]

  @@id([term, course])
  @@index([dept])
  @@index([term, dept])
}

model Instructors {
  id    String  @id @db.VarChar(15)
  name  String
  email String? @unique

  section_instructors SInstructors[]

  @@unique([id, name])
  @@index([name])
}

enum DCODE {
  d
  r
}

enum STYPE {
  lec
  dis
  lab
  quiz
  lec_lab
  lec_dis
}

model Sections {
  term    String @db.VarChar(4)
  course  String @db.VarChar(9)
  section String @db.VarChar(5)

  session   String  @db.VarChar(3)
  dcode     DCODE
  type      STYPE
  cancelled Boolean

  tot_seats   Int @db.SmallInt
  taken_seats Int @db.SmallInt

  title     String
  sec_title String?
  desc      String?
  notes     String?

  units_low  Decimal? @db.Decimal(3, 1)
  units_high Decimal? @db.Decimal(3, 1)

  section_infos       SDetails[]
  section_instructors SInstructors[]
  courses             Courses        @relation(fields: [term, course], references: [term, course], onUpdate: Restrict)

  @@id([section, term])
  @@index([course])
  @@index([dcode])
  @@index([session])
  @@index([term, course])
}

model SDetails {
  term    String @db.VarChar(4)
  section String @db.VarChar(5)

  day        Int?      @db.SmallInt
  start_time DateTime? @db.Time(0)
  end_time   DateTime? @db.Time(0)
  loc        String?

  sections Sections @relation(fields: [section, term], references: [section, term], onDelete: Cascade, onUpdate: Restrict)

  @@id([section, term])
  @@index([term])
  @@index([day])
  @@index([end_time])
  @@index([start_time])
}

model SInstructors {
  term       String @db.VarChar(4)
  sec        String @db.VarChar(5)
  instr_id   String @db.VarChar(15)
  instr_name String

  instructors Instructors @relation(fields: [instr_id, instr_name], references: [id, name])
  sections    Sections    @relation(fields: [term, sec], references: [term, section], onDelete: Cascade, onUpdate: Restrict)

  @@id([term, instr_id, sec])
  @@index([sec])
  @@index([instr_id])
}
